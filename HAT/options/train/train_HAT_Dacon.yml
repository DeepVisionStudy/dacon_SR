# general settings
name: _train_HAT_split64_DownScaleLoss
model_type: HATModel
scale: 4
num_gpu: 1
manual_seed: 42

# dataset and data loader settings
datasets:
  train:
    name: train
    type: PairedImageDataset
    dataroot_gt: ../dataset/seed0_size0.02/split64/train/hr
    dataroot_lq: ../dataset/seed0_size0.02/split64/train/lr
    meta_info_file: ./hat/data/meta_info/seed0_size0.02_split64_train_hr.txt
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true  # horizontalflip
    use_rot: true  # verticalflip + rotation90

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
    pin_memory: true

  val_1:
    name: valid
    type: PairedImageDataset
    dataroot_gt: ../dataset/seed0_size0.02/split16/valid/hr
    dataroot_lq: ../dataset/seed0_size0.02/split16/valid/lr
    io_backend:
      type: disk
  
  val_2:
    name: set5
    type: PairedImageDataset
    dataroot_gt: ../dataset/Set5/GTmod12
    dataroot_lq: ../dataset/Set5/LRbicx4
    io_backend:
      type: disk
  
  val_3:
    name: set14
    type: PairedImageDataset
    dataroot_gt: ../dataset/Set14/GTmod12
    dataroot_lq: ../dataset/Set14/LRbicx4
    io_backend:
      type: disk
  
  val_4:
    name: urban100
    type: PairedImageDataset
    dataroot_gt: ../dataset/urban100/hr
    dataroot_lq: ../dataset/urban100/lr
    io_backend:
      type: disk

# network structures
network_g:
  type: HAT
  upscale: 4
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ./experiments/pretrained_models/HAT_SRx4_ImageNet-pretrain.pth
  param_key_g: 'params_ema'
  strict_load_g: true
  resume_state: ~
  

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [51424]
    restart_weights: [1.0]
    eta_min: !!float 1e-6

    # type: MultiStepLR
    # milestones: [23616, 23616, 23616, 23616]
    # gamma: 0.5

  total_iter: 51424  # 1 epoch = 51424 iter
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  pixel_opt_2:
    type: DownScaleLoss
    loss_weight: 0.5
    reduction: mean
    
    # type: PSNRLoss  # it will return minus value
    # loss_weight: 1.0
    # reduction: mean
    # toY: true  # on y channel
  
  # perceptual_opt:
  #   type: PerceptualLoss
  #   layer_weights:
  #     # before relu
  #     'conv1_2': 0.1
  #     'conv2_2': 0.1
  #     'conv3_4': 1
  #     'conv4_4': 1
  #     'conv5_4': 1
  #   vgg_type: vgg19
  #   use_input_norm: true
  #   perceptual_weight: !!float 1e-3
  #   style_weight: 0
  #   range_norm: false
  #   criterion: l1

# validation settings
val:
  val_freq: 12856
  save_img: false
  pbar: False

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0  # exlude border
      test_y_channel: true  # on y channel
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 0  # exlude border
      test_y_channel: true  # on y channel
      better: higher  # the higher, the better. Default: higher

# logging settings
logger:
  print_freq: 1607
  save_checkpoint_freq: 51424
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~
